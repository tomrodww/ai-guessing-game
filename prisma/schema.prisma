// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Theme {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  color       String // Tailwind color class
  icon        String // Lucide icon name
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  stories Story[]

  @@map("themes")
}

model Story {
  id        String   @id @default(cuid())
  title     String
  context   String // The hint/context that sets up the mystery
  hints     String[] // Array of 3 hints for the story
  themeId   String
  imageUrl  String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  theme              Theme               @relation(fields: [themeId], references: [id], onDelete: Cascade)
  phrases            StoryPhrase[] // The phrases that make up the complete story
  playerAffirmations PlayerAffirmation[]
  gameSessions       GameSession[]

  @@map("stories")
}

model StoryPhrase {
  id        String   @id @default(cuid())
  storyId   String
  order     Int // Order of the phrase in the story (1, 2, 3, etc.)
  text      String // The exact phrase text
  createdAt DateTime @default(now())

  story Story @relation(fields: [storyId], references: [id], onDelete: Cascade)

  @@unique([storyId, order])
  @@map("story_phrases")
}

model PlayerAffirmation {
  id          String   @id @default(cuid())
  storyId     String
  affirmation String // The affirmation/statement made by the player
  response    String // "Yes", "No", or "Irrelevant"
  phraseId    String? // If response is "Yes", which phrase does this relate to
  createdAt   DateTime @default(now())

  story Story @relation(fields: [storyId], references: [id], onDelete: Cascade)

  @@map("player_affirmations")
}

model GameSession {
  id              String    @id @default(cuid())
  storyId         String
  coins           Int       @default(7) // Starting coins
  hintsUnlocked   Int[]     @default([]) // Array of hint indices that have been unlocked (0, 1, 2)
  phrasesRevealed Int       @default(0) // Count of phrases revealed for coin rewards
  startedAt       DateTime  @default(now())
  completedAt     DateTime?

  story Story @relation(fields: [storyId], references: [id], onDelete: Cascade)

  @@map("game_sessions")
}
